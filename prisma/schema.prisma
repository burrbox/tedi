// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["driverAdapters"]
}

datasource db {
    provider = "mongodb"
    url      = env("MONGODB_URI")

    // If you have enabled foreign key constraints for your database, remove this line.
    relationMode = "prisma"
}

model Post {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    slug      String   @unique
    title     String
    summary   String
    content   String
    image     String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    author   User   @relation(fields: [authorId], references: [id])
    authorId String @db.ObjectId

    @@index([createdAt])
    @@index([authorId])
}

// Necessary for Next auth
model Account {
    id                String  @id @default(auto()) @map("_id") @db.ObjectId
    userId            String  @db.ObjectId
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@index([userId])
}

model Session {
    id           String   @id @default(auto()) @map("_id") @db.ObjectId
    sessionToken String   @unique
    userId       String   @db.ObjectId
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
}

model User {
    id            String    @id @default(auto()) @map("_id") @db.ObjectId
    name          String?   @default("")
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    role          String    @default("user")
    accounts      Account[]
    sessions      Session[]
    posts         Post[]
}

model VerificationToken {
    id         String   @id @default(auto()) @map("_id") @db.ObjectId
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Subscription {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    email     String   @unique
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}